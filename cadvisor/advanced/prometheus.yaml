global:
  scrape_interval: 15s 
  evaluation_interval: 15s 

alerting:
  alertmanagers:
    - static_configs:
        - targets:

rule_files:

scrape_configs:
  - job_name: "prometheus"

    static_configs:
      - targets: ["localhost:9090"]
        labels:
          app: "prometheus"
  
  - job_name: "node_exporter"
    static_configs:
        - targets: ["advanced-node_exporter-1:9100"]
        # - targets: ["309d843661bb_advanced-node_exporter-1:9100", "advanced-node_exporter-2:9100", "advanced-node_exporter-3:9100"]
    params:
      collect[]:
      - cpu
      - meminfo
      - diskstats
      - netdev
      - netstat
      - filefd
      - filesystem
      - xfs
      - systemd

  - job_name: "cadvisor"
    static_configs:
        - targets: ["cadvisor:8080"]
    # metric_relabel_configs applies relabeling to time series after they are scraped and before they are stored. Whereas relabel_configs applies relabeling to the target labels before scraping.
    metric_relabel_configs:
      # This drops the time series that are not needed. In this case, it drops the container_tasks_state and container_memory_failures_total time series.
      # Before it drops, Prometheus concatenates all time series with ',' as a separator instead of ';'.
      - source_labels: [__name__]
        separator: ','
        regex: "(container_tasks_state|container_memory_failures_total)"
        action: drop
      #  This finds all time series whose "id" label matches the regex and add a new label named "container_id" with the value of the first capturing group of the regex.
      - source_labels:
          - id
        regex: "/system.slice/docker-([a-z0-9]+).scope"
        replacement: "$1"
        target_label: container_id
      # This drops the "container_label_com_docker_compose_config_hash" label from all time series.
      - regex: "container_label_com_docker_compose_config_hash"
        action: labeldrop